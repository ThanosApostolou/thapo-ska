map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

upstream upstream-frontend {
    server host.docker.internal:14081;
}

upstream upstream-backend {
    server host.docker.internal:14082;
}

upstream upstream-iam {
    server thapo_ska_iam:14083;
}

server {
    listen 14080;
    listen [::]:14080;

    location /app {
        proxy_pass http://upstream-frontend/app;
        proxy_http_version 1.1;
        proxy_set_header    Upgrade             $http_upgrade;
        proxy_set_header    Connection          $connection_upgrade;
        proxy_set_header    Host                $http_host;
        proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
    }

    location /_trunk {
        proxy_pass http://upstream-frontend/_trunk;
        proxy_http_version 1.1;
        proxy_set_header    Upgrade             $http_upgrade;
        proxy_set_header    Connection          $connection_upgrade;
        proxy_set_header    Host                $http_host;
        proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
    }

    location /backend/private {
        deny all;
    }

    location /backend {
        proxy_pass http://upstream-backend/backend;
        proxy_http_version 1.1;
        proxy_set_header    Upgrade             $http_upgrade;
        proxy_set_header    Connection          $connection_upgrade;
        proxy_set_header    Host                $http_host;
        proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
    }

    location /iam {
        proxy_pass http://upstream-iam/iam;
        proxy_http_version 1.1;
        proxy_set_header    Upgrade             $http_upgrade;
        proxy_set_header    Connection          $connection_upgrade;
        proxy_set_header    Host                $http_host;
        proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
    }

    location =/ {
        rewrite ^ $scheme://$http_host/app/ redirect;
    }
}