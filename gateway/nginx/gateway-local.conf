map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

server {
    listen 14080;

    location /app {
        proxy_pass http://host.docker.internal:14081/app;
        proxy_http_version 1.1;
        proxy_set_header    Upgrade             $http_upgrade;
        proxy_set_header    Connection          $connection_upgrade;
        proxy_set_header    Host                $http_host;
        proxy_set_header    X-Real-IP           $remote_addr;
        proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Proto   $scheme;
    }

    location /_trunk {
        proxy_pass http://host.docker.internal:14081/_trunk;
        proxy_http_version 1.1;
        proxy_set_header    Upgrade             $http_upgrade;
        proxy_set_header    Connection          $connection_upgrade;
        proxy_set_header    Host                $http_host;
        proxy_set_header    X-Real-IP           $remote_addr;
        proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Proto   $scheme;
    }

    location /backend/private {
        deny all;
    }

    location /backend {
        # proxy_set_header Host $host;
        # proxy_set_header X-Real-IP $remote_addr;
        proxy_pass http://host.docker.internal:14082/backend;
        proxy_http_version 1.1;
        proxy_set_header    Upgrade             $http_upgrade;
        proxy_set_header    Connection          $connection_upgrade;
        proxy_set_header    Host                $http_host;
        proxy_set_header    X-Real-IP           $remote_addr;
        proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Proto   $scheme;
    }

    location / {
        rewrite ^ $scheme://$http_host/app/ redirect;
    }
}