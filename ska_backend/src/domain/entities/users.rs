//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.11

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(schema_name = "thapo_ska_schema", table_name = "users")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub user_id: i64,
    #[sea_orm(unique)]
    pub sub: String,
    #[sea_orm(unique)]
    pub email: String,
    pub last_login: DateTime,
    pub created_at: DateTime,
    pub updated_at: DateTime,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::user_chat_message::Entity")]
    UserChatMessage,
}

impl Related<super::user_chat_message::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::UserChatMessage.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
